#!/usr/bin/node

const app = require('../src');
const http = require('http');
const debug = require('debug')('sample:server');
const logger = require('../src/_util/logger');

// Create HTTP server
const server = http.createServer(app);

/**
 * Normalise port into a number, string or false
 * @param val
 * @returns {boolean|number|*}
 */
const normalisePort = (val) => {
    const port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return  false;
}

const onError = (error) => {
    if (error.syscall !== 'listen') {
        throw error;
    }
    const bind = typeof port === 'string' ? `Pipe ${port}` : `Port: ${port}`;
    switch (error.code) {
        case 'EACCESS':
            logger.error(`${bind} requires elevated privileges`);
            process.exit(1);
            break;
        case 'EADDRINUSE':
            logger.error`${bind} is already in use`;
            process.exit(1);
            break;
        default:
            throw error;
    }
};

/**
 * Event listener for HTTP server listening event
 */
const onListening = () => {
    const addr = server.address();
    const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
    const message = `Listening on ${bind}`;
    debug(message);
    logger.info(message);
};

const port = normalisePort(process.env.PORT || '8080');
app.set('port', port);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
